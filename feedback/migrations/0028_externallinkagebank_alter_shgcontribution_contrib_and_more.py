# Generated by Django 4.2.4 on 2025-04-15 18:29

import datetime
from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('feedback', '0027_remove_selfhelpgroup_pool_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalLinkageBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Bank name')),
                ('bookkeeping_requirement', models.DurationField(default=datetime.timedelta(days=180), verbose_name='Bookkeeping Requirement for Applicant SHGs')),
                ('member_requirement', models.IntegerField(default=5, verbose_name='Minimum Number of Members')),
                ('pool_requirement', models.IntegerField(default=0, verbose_name='Minimum Pool')),
                ('avg_interest_rate', models.FloatField(verbose_name='Average Interest Rate')),
                ('min_loan', models.IntegerField(default=0, verbose_name='Minimum Loan Amount')),
                ('review_time', models.DurationField(default=datetime.timedelta(days=30), verbose_name='Typical Review Time')),
                ('image', models.ImageField(blank=True, null=True, upload_to='bank_images')),
            ],
        ),
        migrations.AlterField(
            model_name='shgcontribution',
            name='contrib',
            field=models.JSONField(blank=True, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder),
        ),
        migrations.AlterField(
            model_name='shgloan',
            name='amortization_schedule',
            field=models.JSONField(blank=True, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LinkageApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal', models.FloatField(verbose_name='Principal')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('purpose', models.TextField(verbose_name='Purpose')),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('duration', models.IntegerField(verbose_name='Duration (in months)')),
                ('repayment_freq', models.IntegerField(choices=[(0, 'Biweekly'), (1, 'Weekly'), (2, 'Monthly'), (3, 'Quarterly')], default=2, verbose_name='Repayment Frequency')),
                ('interest_rate', models.FloatField(verbose_name='Annual Interest Rate')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Approved'), (2, 'Rejected'), (3, 'Completed'), (4, 'Defaulted')], default=0)),
                ('total_payable', models.FloatField(default=0, verbose_name='Total Payable')),
                ('amortization_schedule', models.JSONField(blank=True, default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.externallinkagebank')),
                ('shg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.selfhelpgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='externallinkagebank',
            name='applications',
            field=models.ManyToManyField(blank=True, related_name='applications', through='feedback.LinkageApplication', to='feedback.selfhelpgroup'),
        ),
    ]
